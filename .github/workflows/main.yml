name: Build Android APK

on:
  push:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer==1.5.0
        pip install cython==0.29.33
        pip install --upgrade urllib3
        pip install requests

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            python3-pip \
            build-essential \
            git \
            python3 \
            python3-dev \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev

    - name: Setup Android SDK
      run: |
        # Create base directory
        mkdir -p $HOME/.buildozer/android/platform/android-sdk

        # Download and extract SDK tools
        cd $HOME/.buildozer/android/platform/android-sdk
        curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools.zip
        rm commandlinetools.zip

        # Create proper directory structure
        mkdir -p cmdline-tools/tools
        mv cmdline-tools/* cmdline-tools/tools/ || true
        rm -rf cmdline-tools/tools/cmdline-tools

        # Set SDK path and install required packages
        export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/tools/bin:$PATH

        # Accept licenses and install packages
        yes | sdkmanager --licenses --sdk_root=$ANDROID_SDK_ROOT
        sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.0"

    - name: Setup Android NDK
      run: |
        cd $HOME/.buildozer/android/platform
        curl -o android-ndk.zip https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
        unzip -q android-ndk.zip
        rm android-ndk.zip

    - name: Set environment variables
      run: |
        echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$HOME/.buildozer/android/platform/android-ndk-r25b" >> $GITHUB_ENV
        echo "$HOME/.buildozer/android/platform/android-sdk/cmdline-tools/tools/bin" >> $GITHUB_PATH
        echo "$HOME/.buildozer/android/platform/android-sdk/platform-tools" >> $GITHUB_PATH
        echo "$HOME/.buildozer/android/platform/android-sdk/build-tools/33.0.0" >> $GITHUB_PATH

    - name: Verify Android SDK installation
      run: |
        ls -la $HOME/.buildozer/android/platform/android-sdk/cmdline-tools/tools/bin/
        $HOME/.buildozer/android/platform/android-sdk/cmdline-tools/tools/bin/sdkmanager --version

    - name: Build with Buildozer
      env:
        BUILDOZER_WARN_ON_ROOT: 0
      run: |
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: bierwiegen-app
        path: bin/*.apk
        retention-days: 90
